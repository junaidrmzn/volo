parameters:
  - name: name  # the name of the micro-frontend
    type: string
  - name: location # the location within the repository
    type: string
  - name: container_registry_url
    type: string
    default: vcdoprodcrdevops.azurecr.io
  - name: micro_frontends_to_build_var
    type: string
  - name: container_working_directory
    type: string
    
  
jobs:
- job: build_and_push_micro_frontend_${{ replace(replace(replace(parameters.name,'-', '_'), '@', ''), '/', '_') }}
  dependsOn: what_needs_to_be_build
  container:
      image: voloiq-ui-pipeline:latest
      endpoint: acr-vcdoprod-azuredevops
  displayName: "Build and Push VoloIQ UI Microfrontend ${{ parameters.name }}"
  condition: contains(${{ parameters.micro_frontends_to_build_var}}, '${{parameters.name}}')
  steps:
  - bash: git config --global --add safe.directory ${{ parameters.container_working_directory }}
  - task: Docker@2
    displayName: Login to ACR
    inputs:
        command: login
        containerRegistry: "acr-vcdoprod-azuredevops"
  - bash: |
        ARTIFACT_NAME="${{ replace(parameters.name, '@voloiq/', 'voloiq-ui-') }}"

        DOCKERFILE_PATH="${{ parameters.location }}"

        if ! test -f ${DOCKERFILE_PATH}; then
          echo "Dockerfile for ${{ parameters.name }} not found under path: ${DOCKERFILE_PATH}"
          continue
        fi

        BUILD_TAGS=""
        if [[ "${ARTIFACT_NAME}" == "voloiq-ui-app" ]]; then
          APP_NAME="voloiq-ui"
        else
          APP_NAME=${ARTIFACT_NAME}
        fi
        APPS_TO_DEPLOY+=($APP_NAME)

        for TAG in "latest" "$(Build.BuildId)"; do
          DOCKER_IMAGE="${{ parameters.container_registry_url }}/${APP_NAME}:${TAG}"
          BUILD_TAGS+=" -t ${DOCKER_IMAGE}"
          DOCKER_IMAGES+=($DOCKER_IMAGE)
        done

        echo "Running: docker build ${BUILD_TAGS} -f ${DOCKERFILE_PATH} ."
        docker build ${BUILD_TAGS} -f ${DOCKERFILE_PATH} \
        --build-arg voloiqUiPipelineImageVersion=$(Build.BuildId) \
        --build-arg commitId=$(Build.SourceVersion) \
        --build-arg branch=$(Build.SourceBranchName) .

        echo "##vso[task.setvariable variable=DOCKER_IMAGES]${DOCKER_IMAGES[*]}"
    displayName: "Build VoloIQ UI Microfrontend ${{ parameters.name }}"
    workingDirectory: ${{ variables.containerWorkDirectory }}
  - bash: |
      for DOCKER_IMAGE in ${DOCKER_IMAGES[@]}; do
        echo "Running: docker push ${DOCKER_IMAGE}"
        docker push "${DOCKER_IMAGE}"
      done
    displayName: "Push VoloIQ UI Microfrontend ${{ parameters.name }} to ACR"
    workingDirectory: ${{ variables.containerWorkDirectory }}
    env:
      CONTAINER_REGISTRY_URL: "vcdoprodcrdevops.azurecr.io"
  - template: templates/sbom/create-and-publish.yml@templates
    parameters:
      repository: ${{ replace(replace(parameters.name, '@voloiq/', 'voloiq-ui-'), 'voloiq-ui-app', 'voloiq-ui') }}
      tag: $(Build.BuildId)